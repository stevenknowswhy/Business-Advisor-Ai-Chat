name: Secret Scan

on:
  push:
    branches: [ master ]

permissions:
  contents: read
  actions: write

jobs:
  scan-secrets:
    name: Run Secret Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare secret-audit script
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -x scripts/secret-audit.sh ]; then
            echo "Making scripts/secret-audit.sh executable"
            chmod +x scripts/secret-audit.sh || true
          fi

      - name: Run audit (working tree + last 200 commits)
        id: audit
        shell: bash
        run: |
          set -euo pipefail
          export MAX_COMMITS=200
          export REPORT_PATH="$GITHUB_WORKSPACE/secret-audit-report.txt"
          scripts/secret-audit.sh "$GITHUB_WORKSPACE" | tee /tmp/sa.log
          echo "report=$REPORT_PATH" >> $GITHUB_OUTPUT

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: secret-audit-report
          path: secret-audit-report.txt

      - name: Evaluate findings
        shell: bash
        run: |
          set -euo pipefail
          # Fail if high-risk patterns detected (excluding .env.example placeholders)
          if grep -E "sk-or-v1-[A-Za-z0-9]{64}|AKIA[0-9A-Z]{16}|://[^/@:]+:[^/@]+@|eyJ[A-Za-z0-9_\-]+|-----BEGIN[[:space:][:alnum:]]*PRIVATE KEY-----" secret-audit-report.txt; then
            echo "\nSecurity Alert: Potential secrets detected.\n"
            echo "Remediation guidance:"
            echo "- Immediately rotate any exposed credentials (OpenRouter, AWS, DB, etc.)"
            echo "- Remove secrets from repo: use git filter-repo or BFG to clean history"
            echo "- Ensure .env* files are gitignored, and secrets are stored in GitHub/Vercel secrets"
            exit 1
          fi
          echo "No high-risk secrets detected."

